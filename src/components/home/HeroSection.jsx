import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import { motion, AnimatePresence } from 'framer-motion';
import { Play, Star, Users, Award, Calendar, X, ChevronDown, Check, ArrowLeft, ArrowRight } from 'lucide-react';
import { useSettings, useCompanyInfo } from '../../contexts/SettingsContext';



const HeroSection = () => {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [showCategorySelect, setShowCategorySelect] = useState(false);
  const [showBookingForm, setShowBookingForm] = useState(false);
  const [bookingStep, setBookingStep] = useState(1);
  const [selectedProject, setSelectedProject] = useState(null);
  const [bookingForm, setBookingForm] = useState({
    selectedDate: '',
    selectedTime: '',
    selectedPackage: '–ë–∞–∑–æ–≤—ã–π',
    clientName: '',
    clientPhone: '',
    clientEmail: '',
    guestCount: '',
    specialRequests: '',
    totalPrice: 0,
    category: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [bookingSuccess, setBookingSuccess] = useState(false);
  const [currentCalendarDate, setCurrentCalendarDate] = useState(new Date());
  
  // –§–æ–Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è/–≤–∏–¥–µ–æ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞
  const slides = [
    {
      type: 'image',
      src: 'https://images.unsplash.com/photo-1530103862676-de8c9debad1d?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&q=80',
      alt: '–î–µ—Ç—Å–∫–∏–π –ø—Ä–∞–∑–¥–Ω–∏–∫ —Å –∞–Ω–∏–º–∞—Ç–æ—Ä–∞–º–∏',
    },
    {
      type: 'image', 
      src: 'https://images.unsplash.com/photo-1519741497674-611481863552?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&q=80',
      alt: '–ö—Ä–∞—Å–∏–≤–∞—è —Å–≤–∞–¥–µ–±–Ω–∞—è —Ü–µ—Ä–µ–º–æ–Ω–∏—è',
    },
    {
      type: 'image',
      src: 'https://images.unsplash.com/photo-1511795409834-ef04bbd61622?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&q=80',
      alt: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ',
    },
  ];

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Å–º–µ–Ω–∞ —Å–ª–∞–π–¥–æ–≤
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % slides.length);
    }, 5000);
    
    return () => clearInterval(timer);
  }, [slides.length]);

  const trustElements = [
    { icon: Calendar, text: '7+ –ª–µ—Ç –æ–ø—ã—Ç–∞', color: 'text-primary-500' },
    { icon: Users, text: '1000+ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤', color: 'text-secondary-500' },
    { icon: Award, text: '–ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞', color: 'text-accent-500' },
    { icon: Star, text: '4.9 —Ä–µ–π—Ç–∏–Ω–≥', color: 'text-yellow-500' },
  ];

  // –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏ –ø—Ä–æ–µ–∫—Ç—ã –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const categories = [
    { 
      id: 'children', 
      name: '–î–µ—Ç—Å–∫–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏', 
      emoji: 'üéà',
      packages: [
        { name: '–ë–∞–∑–æ–≤—ã–π', price: '85,000 ‚Ç∏', features: ['2 –∞–Ω–∏–º–∞—Ç–æ—Ä–∞', '2 —á–∞—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–ê–∫–≤–∞–≥—Ä–∏–º', '–ò–≥—Ä—ã', '–§–æ—Ç–æ–∑–æ–Ω–∞'] },
        { name: '–°—Ç–∞–Ω–¥–∞—Ä—Ç', price: '120,000 ‚Ç∏', features: ['3 –∞–Ω–∏–º–∞—Ç–æ—Ä–∞', '3 —á–∞—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–®–æ—É –º—ã–ª—å–Ω—ã—Ö –ø—É–∑—ã—Ä–µ–π', '–§–æ—Ç–æ–≥—Ä–∞—Ñ', '–¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–∫–æ—Ä'] },
        { name: '–ü—Ä–µ–º–∏—É–º', price: '180,000 ‚Ç∏', features: ['4 –∞–Ω–∏–º–∞—Ç–æ—Ä–∞', '4 —á–∞—Å–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã', '–ö—É–∫–æ–ª—å–Ω—ã–π —Ç–µ–∞—Ç—Ä', '–í–∏–¥–µ–æ—Å—ä–µ–º–∫–∞', '–¢–æ—Ä—Ç –≤ –ø–æ–¥–∞—Ä–æ–∫'] }
      ]
    },
    { 
      id: 'wedding', 
      name: '–°–≤–∞–¥—å–±—ã', 
      emoji: 'üíï',
      packages: [
        { name: '–ö–∞–º–µ—Ä–Ω–∞—è', price: '400,000 ‚Ç∏', features: ['–í–µ–¥—É—â–∏–π', '–ó–≤—É–∫–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ', '–î–µ–∫–æ—Ä', '–§–æ—Ç–æ–≥—Ä–∞—Ñ'] },
        { name: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è', price: '650,000 ‚Ç∏', features: ['–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å', '–ñ–∏–≤–∞—è –º—É–∑—ã–∫–∞', '–í–∏–¥–µ–æ—Å—ä–µ–º–∫–∞', '–§–ª–æ—Ä–∏—Å—Ç–∏–∫–∞', '–í—ã–µ–∑–¥–Ω–∞—è —Ü–µ—Ä–µ–º–æ–Ω–∏—è'] },
        { name: '–†–æ—Å–∫–æ—à–Ω–∞—è', price: '850,000 ‚Ç∏', features: ['VIP —Å–µ—Ä–≤–∏—Å', '–§–µ–π–µ—Ä–≤–µ—Ä–∫', '–õ–∏–º—É–∑–∏–Ω', '–ü—Ä–µ–º–∏—É–º –ª–æ–∫–∞—Ü–∏—è', '–ë–∞–Ω–∫–µ—Ç'] }
      ]
    },
    { 
      id: 'corporate', 
      name: '–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã', 
      emoji: 'üè¢',
      packages: [
        { name: '–ë–∞–∑–æ–≤—ã–π', price: '200,000 ‚Ç∏', features: ['–í–µ–¥—É—â–∏–π', '–ó–≤—É–∫–æ–≤–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ', '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è', '–§—É—Ä—à–µ—Ç'] },
        { name: '–ë–∏–∑–Ω–µ—Å', price: '320,000 ‚Ç∏', features: ['–¢–∏–º–±–∏–ª–¥–∏–Ω–≥', '–ö–æ–Ω–∫—É—Ä—Å—ã', '–§–æ—Ç–æ–≥—Ä–∞—Ñ', '–ë–∞–Ω–∫–µ—Ç'] },
        { name: '–ü—Ä–µ–º–∏—É–º', price: '450,000 ‚Ç∏', features: ['VIP –ø—Ä–æ–≥—Ä–∞–º–º–∞', '–ê—Ä—Ç–∏—Å—Ç—ã', '–í–∏–¥–µ–æ—Å—ä–µ–º–∫–∞', '–ü–æ–¥–∞—Ä–∫–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º'] }
      ]
    },
    { 
      id: 'anniversary', 
      name: '–Æ–±–∏–ª–µ–∏', 
      emoji: 'üéÇ',
      packages: [
        { name: '–°–µ–º–µ–π–Ω—ã–π', price: '150,000 ‚Ç∏', features: ['–í–µ–¥—É—â–∏–π-—Ç–∞–º–∞–¥–∞', '–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ', '–î–µ–∫–æ—Ä', '–§–æ—Ç–æ–≥—Ä–∞—Ñ'] },
        { name: '–¢–æ—Ä–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π', price: '220,000 ‚Ç∏', features: ['–ñ–∏–≤–∞—è –º—É–∑—ã–∫–∞', '–ê—Ä—Ç–∏—Å—Ç—ã', '–í–∏–¥–µ–æ—Å—ä–µ–º–∫–∞', '–ü–æ–¥–∞—Ä–∫–∏'] },
        { name: '–†–æ—Å–∫–æ—à–Ω—ã–π', price: '280,000 ‚Ç∏', features: ['–ü–æ–ª–Ω—ã–π —Å–µ—Ä–≤–∏—Å', 'VIP –¥–µ–∫–æ—Ä', '–®–æ—É-–ø—Ä–æ–≥—Ä–∞–º–º–∞', '–°—é—Ä–ø—Ä–∏–∑—ã'] }
      ]
    },
    { 
      id: 'show', 
      name: '–®–æ—É-–ø—Ä–æ–≥—Ä–∞–º–º—ã', 
      emoji: 'üé≠',
      packages: [
        { name: '–ë–∞–∑–æ–≤–æ–µ —à–æ—É', price: '180,000 ‚Ç∏', features: ['20 –º–∏–Ω—É—Ç —à–æ—É', '2 –∞—Ä—Ç–∏—Å—Ç–∞', '–ë–∞–∑–æ–≤—ã–π —Ä–µ–∫–≤–∏–∑–∏—Ç', '–°—Ç—Ä–∞—Ö–æ–≤–∫–∞'] },
        { name: '–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ', price: '250,000 ‚Ç∏', features: ['30 –º–∏–Ω—É—Ç —à–æ—É', '3 –∞—Ä—Ç–∏—Å—Ç–∞', '–°–ø–µ—Ü—ç—Ñ—Ñ–µ–∫—Ç—ã', '–ö–æ—Å—Ç—é–º—ã'] },
        { name: '–ü—Ä–µ–º–∏—É–º', price: '320,000 ‚Ç∏', features: ['45 –º–∏–Ω—É—Ç —à–æ—É', '4 –∞—Ä—Ç–∏—Å—Ç–∞', '–ü–æ–ª–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', '–§–æ—Ç–æ/–≤–∏–¥–µ–æ'] }
      ]
    }
  ];

  // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
  const openCategorySelect = () => {
    setShowCategorySelect(true);
    document.body.style.overflow = 'hidden';
  };

  const selectCategory = (category) => {
    const selectedCategory = categories.find(c => c.id === category.id);
    setSelectedProject({
      title: category.name,
      category: category.id,
      packages: selectedCategory.packages
    });
    setBookingForm(prev => ({
      ...prev,
      selectedPackage: selectedCategory.packages[0].name,
      totalPrice: parseFloat(selectedCategory.packages[0].price.replace(/[^\d]/g, '')),
      category: category.id
    }));
    setShowCategorySelect(false);
    setBookingStep(1);
    setShowBookingForm(true);
  };

  const closeBookingForm = () => {
    setShowBookingForm(false);
    setShowCategorySelect(false);
    setBookingSuccess(false);
    setBookingStep(1);
    setSelectedProject(null);
    document.body.style.overflow = 'auto';
  };

  const nextBookingStep = () => {
    setBookingStep(prev => Math.min(prev + 1, 4));
  };

  const prevBookingStep = () => {
    setBookingStep(prev => Math.max(prev - 1, 1));
  };

  const updateBookingForm = (field, value) => {
    setBookingForm(prev => ({
      ...prev,
      [field]: value
    }));
  };

  const selectPackage = (packageData) => {
    const price = parseFloat(packageData.price.replace(/[^\d]/g, ''));
    setBookingForm(prev => ({
      ...prev,
      selectedPackage: packageData.name,
      totalPrice: price
    }));
  };

  const submitBooking = async () => {
    setIsSubmitting(true);
    
    try {
      // –ò–º–∏—Ç–∞—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
      await new Promise(resolve => setTimeout(resolve, 2000));
      
      setBookingSuccess(true);
      setBookingStep(4);
      
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      alert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
    } finally {
      setIsSubmitting(false);
    }
  };

  // –ö–∞–ª–µ–Ω–¥–∞—Ä—å
  const generateCalendarDays = () => {
    const year = currentCalendarDate.getFullYear();
    const month = currentCalendarDate.getMonth();
    
    const firstDay = new Date(year, month, 1);
    const lastDay = new Date(year, month + 1, 0);
    const startDate = new Date(firstDay);
    startDate.setDate(startDate.getDate() - firstDay.getDay());
    
    const days = [];
    for (let i = 0; i < 42; i++) {
      const date = new Date(startDate);
      date.setDate(startDate.getDate() + i);
      days.push(date);
    }
    
    return days;
  };

  const navigateCalendar = (direction) => {
    const newDate = new Date(currentCalendarDate);
    newDate.setMonth(newDate.getMonth() + direction);
    setCurrentCalendarDate(newDate);
  };

  const monthNames = [
    '–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π', '–ò—é–Ω—å',
    '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å', '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å'
  ];

  const dayNames = ['–í—Å', '–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±'];

  useEffect(() => {
    const handleKeyDown = (e) => {
      if ((showBookingForm || showCategorySelect) && e.key === 'Escape') {
        closeBookingForm();
      }
    };

    document.addEventListener('keydown', handleKeyDown);
    return () => document.removeEventListener('keydown', handleKeyDown);
  }, [showBookingForm, showCategorySelect]);

  return (
    <>
      <section className="relative min-h-screen flex items-center justify-center overflow-hidden">
        {/* –§–æ–Ω–æ–≤—ã–π —Å–ª–∞–π–¥–µ—Ä */}
        <div className="absolute inset-0 z-0">
          {slides.map((slide, index) => (
            <motion.div
              key={index}
              initial={{ opacity: 0 }}
              animate={{ opacity: currentSlide === index ? 1 : 0 }}
              transition={{ duration: 1 }}
              className="absolute inset-0"
            >
              <div
                className="w-full h-full bg-cover bg-center bg-no-repeat"
                style={{ backgroundImage: `url(${slide.src})` }}
              />
              {/* –¢–µ–º–Ω—ã–π –æ–≤–µ—Ä–ª–µ–π */}
              <div className="absolute inset-0 bg-black/50"></div>
            </motion.div>
          ))}
        </div>

        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div className="absolute inset-0 z-10">
          <div className="absolute top-20 left-10 w-20 h-20 bg-primary-500/20 rounded-full blur-xl animate-float"></div>
          <div className="absolute top-40 right-20 w-32 h-32 bg-secondary-500/20 rounded-full blur-xl animate-float" style={{ animationDelay: '1s' }}></div>
          <div className="absolute bottom-32 left-1/4 w-16 h-16 bg-accent-500/20 rounded-full blur-xl animate-float" style={{ animationDelay: '2s' }}></div>
        </div>

        {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
        <div className="relative z-20 container-custom text-center text-white">
          <motion.div
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="max-w-4xl mx-auto"
          >
            {/* –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <motion.h1 
              className="heading-1 mb-6 text-shadow-lg"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
            >
              –°–æ–∑–¥–∞—ë–º{' '}
              <span className="gradient-text bg-gradient-to-r from-primary-300 via-secondary-300 to-accent-300 bg-clip-text text-transparent">
                –Ω–µ–∑–∞–±—ã–≤–∞–µ–º—ã–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∏
              </span>{' '}
              –≤ –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫–µ
            </motion.h1>

            {/* –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <motion.p 
              className="text-xl md:text-2xl mb-8 text-gray-200 max-w-3xl mx-auto leading-relaxed"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.4 }}
            >
              –û—Ç –¥–µ—Ç—Å–∫–∏—Ö –¥–Ω–µ–π —Ä–æ–∂–¥–µ–Ω–∏—è –¥–æ —Å–≤–∞–¥–µ–± –º–µ—á—Ç—ã ‚Äî –±–æ–ª–µ–µ{' '}
              <span className="text-secondary-300 font-semibold">1000 —Å—á–∞—Å—Ç–ª–∏–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</span>{' '}
              –¥–æ–≤–µ—Ä–∏–ª–∏ –Ω–∞–º —Å–≤–æ–∏ —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã
            </motion.p>

            {/* CTA –∫–Ω–æ–ø–∫–∏ */}
            <motion.div 
              className="flex flex-col sm:flex-row gap-4 justify-center items-center mb-12"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.6 }}
            >
              <button
                onClick={openCategorySelect}
                className="btn-primary text-lg px-8 py-4 w-full sm:w-auto"
              >
                –ó–∞–∫–∞–∑–∞—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫
              </button>
              
              <Link
                to="/portfolio"
                className="btn-outline border-white text-white hover:bg-white hover:text-gray-900 text-lg px-8 py-4 w-full sm:w-auto flex items-center justify-center gap-2"
              >
                <Play size={20} />
                –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ
              </Link>
            </motion.div>

            {/* –≠–ª–µ–º–µ–Ω—Ç—ã –¥–æ–≤–µ—Ä–∏—è */}
            <motion.div 
              className="grid grid-cols-2 lg:grid-cols-4 gap-6 max-w-4xl mx-auto"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.8 }}
            >
              {trustElements.map((element, index) => (
                <motion.div
                  key={index}
                  className="bg-white/10 backdrop-blur-sm rounded-2xl p-4 text-center border border-white/20"
                  whileHover={{ scale: 1.05, backgroundColor: 'rgba(255, 255, 255, 0.15)' }}
                  transition={{ duration: 0.3 }}
                >
                  <element.icon className={`w-8 h-8 ${element.color} mx-auto mb-2`} />
                  <p className="text-white font-semibold text-sm md:text-base">
                    {element.text}
                  </p>
                </motion.div>
              ))}
            </motion.div>
          </motion.div>
        </div>

        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã —Å–ª–∞–π–¥–æ–≤ */}
        <div className="absolute bottom-8 left-1/2 transform -translate-x-1/2 z-30">
          <div className="flex space-x-2">
            {slides.map((_, index) => (
              <button
                key={index}
                onClick={() => setCurrentSlide(index)}
                className={`w-3 h-3 rounded-full transition-all duration-300 ${
                  currentSlide === index 
                    ? 'bg-white scale-125' 
                    : 'bg-white/50 hover:bg-white/75'
                }`}
              />
            ))}
          </div>
        </div>
      </section>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
      <AnimatePresence>
        {showCategorySelect && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-black bg-opacity-70 flex items-center justify-center p-4"
            onClick={closeBookingForm}
          >
            <motion.div
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              className="bg-white rounded-2xl p-8 max-w-md w-full max-h-[80vh] overflow-y-auto"
              onClick={e => e.stopPropagation()}
            >
              <div className="flex items-center justify-between mb-6">
                <h3 className="text-xl font-bold text-gray-900">–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø—Ä–∞–∑–¥–Ω–∏–∫–∞</h3>
                <button
                  onClick={closeBookingForm}
                  className="w-8 h-8 flex items-center justify-center text-gray-500 hover:text-gray-700 transition-colors rounded-full hover:bg-gray-100"
                >
                  <X size={20} />
                </button>
              </div>
              
              <div className="space-y-3">
                {categories.map(category => (
                  <button
                    key={category.id}
                    className="w-full py-4 px-4 rounded-xl bg-purple-50 hover:bg-purple-100 text-purple-700 font-semibold flex items-center gap-3 transition-colors group"
                    onClick={() => selectCategory(category)}
                  >
                    <span className="text-2xl">{category.emoji}</span>
                    <span className="flex-1 text-left">{category.name}</span>
                    <ChevronDown size={16} className="-rotate-90 group-hover:translate-x-1 transition-transform" />
                  </button>
                ))}
              </div>
              
              <div className="mt-6 p-4 bg-gray-50 rounded-xl">
                <p className="text-sm text-gray-600 text-center">
                  üí° –ù–µ –∑–Ω–∞–µ—Ç–µ —á—Ç–æ –≤—ã–±—Ä–∞—Ç—å? –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–º–æ–∂–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å—Å—è —Å —Ç–∏–ø–æ–º –ø—Ä–∞–∑–¥–Ω–∏–∫–∞ –∏ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É
                </p>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>

      {/* –§–æ—Ä–º–∞ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è */}
      <AnimatePresence>
        {showBookingForm && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 bg-black bg-opacity-90 flex items-center justify-center p-4"
            onClick={closeBookingForm}
          >
            <motion.div
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.8, opacity: 0 }}
              className="max-w-4xl w-full bg-white rounded-2xl overflow-hidden max-h-[90vh] flex flex-col"
              onClick={(e) => e.stopPropagation()}
            >
              {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div className="bg-gradient-to-r from-purple-600 to-pink-600 text-white p-6 flex-shrink-0">
                <div className="flex items-center justify-between">
                  <div>
                    <h2 className="text-2xl font-bold mb-2">–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–∑–¥–Ω–∏–∫–∞</h2>
                    <p className="text-purple-100">{selectedProject?.title}</p>
                  </div>
                  <button
                    onClick={closeBookingForm}
                    className="w-10 h-10 flex items-center justify-center rounded-full bg-white/20 hover:bg-white/30 transition-colors"
                  >
                    <X size={24} />
                  </button>
                </div>

                {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∞–≥–æ–≤ */}
                <div className="mt-6 flex items-center justify-between">
                  {[1, 2, 3, 4].map((step) => (
                    <div key={step} className="flex items-center">
                      <div className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-bold ${
                        bookingStep >= step 
                          ? 'bg-white text-purple-600' 
                          : 'bg-white/20 text-white/60'
                      }`}>
                        {bookingSuccess && step === 4 ? <Check size={16} /> : step}
                      </div>
                      {step < 4 && (
                        <div className={`flex-1 h-0.5 mx-2 ${
                          bookingStep > step ? 'bg-white' : 'bg-white/20'
                        }`} />
                      )}
                    </div>
                  ))}
                </div>
              </div>

              {/* –ö–æ–Ω—Ç–µ–Ω—Ç —Ñ–æ—Ä–º—ã */}
              <div className="flex-1 p-6 overflow-y-auto">
                {bookingStep === 1 && (
                  <div className="space-y-6">
                    <h3 className="text-xl font-bold text-gray-900">–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è</h3>
                    
                    {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å */}
                    <div className="bg-gray-50 rounded-xl p-4">
                      <div className="flex items-center justify-between mb-4">
                        <button
                          onClick={() => navigateCalendar(-1)}
                          className="p-2 rounded-lg hover:bg-gray-200 transition-colors"
                        >
                          <ArrowLeft size={20} />
                        </button>
                        
                        <h4 className="text-lg font-semibold">
                          {monthNames[currentCalendarDate.getMonth()]} {currentCalendarDate.getFullYear()}
                        </h4>
                        
                        <button
                          onClick={() => navigateCalendar(1)}
                          className="p-2 rounded-lg hover:bg-gray-200 transition-colors"
                        >
                          <ArrowRight size={20} />
                        </button>
                      </div>

                      <div className="grid grid-cols-7 gap-1 mb-2">
                        {dayNames.map(day => (
                          <div key={day} className="p-2 text-center text-sm font-medium text-gray-500">
                            {day}
                          </div>
                        ))}
                      </div>

                      <div className="grid grid-cols-7 gap-1">
                        {generateCalendarDays().map((date, index) => {
                          const isCurrentMonth = date.getMonth() === currentCalendarDate.getMonth();
                          const isToday = date.toDateString() === new Date().toDateString();
                          const isPast = date < new Date().setHours(0, 0, 0, 0);
                          const isSelected = bookingForm.selectedDate === date.toISOString().split('T')[0];

                          return (
                            <button
                              key={index}
                              onClick={() => !isPast && updateBookingForm('selectedDate', date.toISOString().split('T')[0])}
                              disabled={isPast}
                              className={`p-2 text-sm rounded-lg transition-colors ${
                                isPast
                                  ? 'text-gray-300 cursor-not-allowed'
                                  : isSelected
                                  ? 'bg-purple-600 text-white'
                                  : isToday
                                  ? 'bg-purple-100 text-purple-700 hover:bg-purple-200'
                                  : isCurrentMonth
                                  ? 'text-gray-900 hover:bg-purple-50'
                                  : 'text-gray-400 hover:bg-gray-100'
                              }`}
                            >
                              {date.getDate()}
                            </button>
                          );
                        })}
                      </div>
                    </div>

                    {/* –í—Ä–µ–º—è */}
                    {bookingForm.selectedDate && (
                      <div>
                        <h4 className="text-lg font-semibold mb-3">–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è</h4>
                        <div className="grid grid-cols-2 sm:grid-cols-3 gap-3">
                          {['10:00', '12:00', '14:00', '16:00', '18:00', '20:00'].map(time => (
                            <button
                              key={time}
                              onClick={() => updateBookingForm('selectedTime', time)}
                              className={`p-3 text-center rounded-lg border transition-colors ${
                                bookingForm.selectedTime === time
                                  ? 'border-purple-600 bg-purple-50 text-purple-700'
                                  : 'border-gray-200 hover:border-purple-300 hover:bg-purple-50'
                              }`}
                            >
                              {time}
                            </button>
                          ))}
                        </div>
                      </div>
                    )}
                  </div>
                )}

                {bookingStep === 2 && (
                  <div className="space-y-6">
                    <h3 className="text-xl font-bold text-gray-900">–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç —É—Å–ª—É–≥</h3>
                    
                    <div className="grid gap-4">
                      {selectedProject?.packages?.map((pkg, index) => (
                        <div
                          key={index}
                          className={`p-4 rounded-xl border cursor-pointer transition-colors ${
                            bookingForm.selectedPackage === pkg.name
                              ? 'border-purple-600 bg-purple-50'
                              : 'border-gray-200 hover:border-purple-300'
                          }`}
                          onClick={() => selectPackage(pkg)}
                        >
                          <div className="flex justify-between items-start mb-3">
                            <h4 className="text-lg font-semibold text-gray-900">{pkg.name}</h4>
                            <div className="text-xl font-bold text-purple-600">{pkg.price}</div>
                          </div>
                          
                          <div className="space-y-1">
                            {pkg.features.map((feature, idx) => (
                              <div key={idx} className="flex items-center gap-2 text-sm text-gray-600">
                                <Check size={16} className="text-green-500 flex-shrink-0" />
                                {feature}
                              </div>
                            ))}
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                )}

                {bookingStep === 3 && (
                  <div className="space-y-6">
                    <h3 className="text-xl font-bold text-gray-900">–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</h3>
                    
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">
                          –¢–µ–ª–µ—Ñ–æ–Ω *
                        </label>
                        <input
                          type="tel"
                          value={bookingForm.clientPhone}
                          onChange={(e) => updateBookingForm('clientPhone', e.target.value)}
                          className="w-full p-3 border border-gray-300 rounded-lg focus:ring-purple-500 focus:border-purple-500"
                          placeholder="+7 (___) ___-__-__"
                          required
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">
                          Email
                        </label>
                        <input
                          type="email"
                          value={bookingForm.clientEmail}
                          onChange={(e) => updateBookingForm('clientEmail', e.target.value)}
                          className="w-full p-3 border border-gray-300 rounded-lg focus:ring-purple-500 focus:border-purple-500"
                          placeholder="your@email.com"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-2">
                          –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π
                        </label>
                        <input
                          type="number"
                          value={bookingForm.guestCount}
                          onChange={(e) => updateBookingForm('guestCount', e.target.value)}
                          className="w-full p-3 border border-gray-300 rounded-lg focus:ring-purple-500 focus:border-purple-500"
                          placeholder="10"
                        />
                      </div>
                    </div>

                    <div>
                      <label className="block text-sm font-medium text-gray-700 mb-2">
                        –û—Å–æ–±—ã–µ –ø–æ–∂–µ–ª–∞–Ω–∏—è
                      </label>
                      <textarea
                        value={bookingForm.specialRequests}
                        onChange={(e) => updateBookingForm('specialRequests', e.target.value)}
                        rows={4}
                        className="w-full p-3 border border-gray-300 rounded-lg focus:ring-purple-500 focus:border-purple-500"
                        placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–∏—Ö –ø–æ–∂–µ–ª–∞–Ω–∏—è—Ö –∫ –ø—Ä–∞–∑–¥–Ω–∏–∫—É..."
                      />
                    </div>
                  </div>
                )}

                {bookingStep === 4 && (
                  <div className="text-center space-y-6">
                    {bookingSuccess ? (
                      <>
                        <div className="w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto">
                          <Check size={40} className="text-green-600" />
                        </div>
                        <h3 className="text-2xl font-bold text-gray-900">–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</h3>
                        <p className="text-gray-600 max-w-md mx-auto">
                          –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞—è–≤–∫—É! –ù–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π.
                        </p>
                        
                        <div className="bg-purple-50 rounded-xl p-4">
                          <h4 className="font-semibold text-purple-900 mb-2">–î–µ—Ç–∞–ª–∏ –∑–∞—è–≤–∫–∏:</h4>
                          <div className="space-y-1 text-sm text-purple-700">
                            <p>–£—Å–ª—É–≥–∞: {selectedProject?.title}</p>
                            <p>–î–∞—Ç–∞: {bookingForm.selectedDate ? new Date(bookingForm.selectedDate).toLocaleDateString('ru-RU') : '-'}</p>
                            <p>–í—Ä–µ–º—è: {bookingForm.selectedTime}</p>
                            <p>–ü–∞–∫–µ—Ç: {bookingForm.selectedPackage}</p>
                            <p>–°—Ç–æ–∏–º–æ—Å—Ç—å: {bookingForm.totalPrice.toLocaleString()} ‚Ç∏</p>
                          </div>
                        </div>
                      </>
                    ) : (
                      <>
                        <h3 className="text-xl font-bold text-gray-900">–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h3>
                        
                        <div className="bg-gray-50 rounded-xl p-6 text-left">
                          <h4 className="font-semibold text-gray-900 mb-4">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞:</h4>
                          <div className="space-y-2 text-sm">
                            <div className="flex justify-between">
                              <span className="text-gray-600">–£—Å–ª—É–≥–∞:</span>
                              <span className="font-medium">{selectedProject?.title}</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">–î–∞—Ç–∞:</span>
                              <span className="font-medium">
                                {bookingForm.selectedDate ? new Date(bookingForm.selectedDate).toLocaleDateString('ru-RU') : '-'}
                              </span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">–í—Ä–µ–º—è:</span>
                              <span className="font-medium">{bookingForm.selectedTime || '-'}</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">–ü–∞–∫–µ—Ç:</span>
                              <span className="font-medium">{bookingForm.selectedPackage}</span>
                            </div>
                            <div className="flex justify-between">
                              <span className="text-gray-600">–ì–æ—Å—Ç–µ–π:</span>
                              <span className="font-medium">{bookingForm.guestCount || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                            </div>
                            <div className="border-t pt-2 mt-2">
                              <div className="flex justify-between text-lg">
                                <span className="font-semibold">–ò—Ç–æ–≥–æ:</span>
                                <span className="font-bold text-purple-600">
                                  {bookingForm.totalPrice.toLocaleString()} ‚Ç∏
                                </span>
                              </div>
                            </div>
                          </div>
                        </div>

                        <p className="text-sm text-gray-600">
                          –ù–∞–∂–∏–º–∞—è "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑", –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.
                        </p>
                      </>
                    )}
                  </div>
                )}
              </div>

              {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
              <div className="bg-gray-50 p-6 flex justify-between items-center flex-shrink-0">
                <button
                  onClick={bookingStep === 1 ? closeBookingForm : prevBookingStep}
                  className="px-6 py-2 text-gray-600 hover:text-gray-800 transition-colors"
                  disabled={isSubmitting}
                >
                  {bookingStep === 1 ? '–û—Ç–º–µ–Ω–∞' : '–ù–∞–∑–∞–¥'}
                </button>

                <div className="flex gap-3">
                  {bookingStep < 4 && (
                    <button
                      onClick={bookingStep === 3 ? submitBooking : nextBookingStep}
                      disabled={
                        isSubmitting ||
                        (bookingStep === 1 && (!bookingForm.selectedDate || !bookingForm.selectedTime)) ||
                        (bookingStep === 3 && (!bookingForm.clientName || !bookingForm.clientPhone))
                      }
                      className="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed flex items-center gap-2"
                    >
                      {isSubmitting ? (
                        <>
                          <div className="w-4 h-4 border-2 border-white/20 border-t-white rounded-full animate-spin" />
                          –û—Ç–ø—Ä–∞–≤–∫–∞...
                        </>
                      ) : bookingStep === 3 ? (
                        '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑'
                      ) : (
                        '–î–∞–ª–µ–µ'
                      )}
                    </button>
                  )}

                  {bookingStep === 4 && bookingSuccess && (
                    <button
                      onClick={closeBookingForm}
                      className="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-colors"
                    >
                      –ó–∞–∫—Ä—ã—Ç—å
                    </button>
                  )}
                </div>
              </div>
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </>
  );
};

export default HeroSection;